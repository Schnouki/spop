/*
 * Generated by gdbus-codegen 2.41.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __MPRIS2_GENERATED_H__
#define __MPRIS2_GENERATED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.mpris.MediaPlayer2 */

#define MPRIS2_TYPE_ (mpris2__get_type ())
#define MPRIS2_(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), MPRIS2_TYPE_, Mpris2))
#define MPRIS2_IS_(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), MPRIS2_TYPE_))
#define MPRIS2__GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), MPRIS2_TYPE_, Mpris2Iface))

struct _Mpris2;
typedef struct _Mpris2 Mpris2;
typedef struct _Mpris2Iface Mpris2Iface;

struct _Mpris2Iface
{
  GTypeInterface parent_iface;


  gboolean (*handle_quit) (
    Mpris2 *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_raise) (
    Mpris2 *object,
    GDBusMethodInvocation *invocation);

  gboolean  (*get_can_quit) (Mpris2 *object);

  gboolean  (*get_can_raise) (Mpris2 *object);

  gboolean  (*get_can_set_fullscreen) (Mpris2 *object);

  const gchar * (*get_desktop_entry) (Mpris2 *object);

  gboolean  (*get_fullscreen) (Mpris2 *object);

  gboolean  (*get_has_track_list) (Mpris2 *object);

  const gchar * (*get_identity) (Mpris2 *object);

  const gchar *const * (*get_supported_mime_types) (Mpris2 *object);

  const gchar *const * (*get_supported_uri_schemes) (Mpris2 *object);

};

GType mpris2__get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *mpris2__interface_info (void);
guint mpris2__override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void mpris2__complete_raise (
    Mpris2 *object,
    GDBusMethodInvocation *invocation);

void mpris2__complete_quit (
    Mpris2 *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void mpris2__call_raise (
    Mpris2 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mpris2__call_raise_finish (
    Mpris2 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mpris2__call_raise_sync (
    Mpris2 *proxy,
    GCancellable *cancellable,
    GError **error);

void mpris2__call_quit (
    Mpris2 *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean mpris2__call_quit_finish (
    Mpris2 *proxy,
    GAsyncResult *res,
    GError **error);

gboolean mpris2__call_quit_sync (
    Mpris2 *proxy,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
gboolean mpris2__get_can_quit (Mpris2 *object);
void mpris2__set_can_quit (Mpris2 *object, gboolean value);

gboolean mpris2__get_fullscreen (Mpris2 *object);
void mpris2__set_fullscreen (Mpris2 *object, gboolean value);

gboolean mpris2__get_can_set_fullscreen (Mpris2 *object);
void mpris2__set_can_set_fullscreen (Mpris2 *object, gboolean value);

gboolean mpris2__get_can_raise (Mpris2 *object);
void mpris2__set_can_raise (Mpris2 *object, gboolean value);

gboolean mpris2__get_has_track_list (Mpris2 *object);
void mpris2__set_has_track_list (Mpris2 *object, gboolean value);

const gchar *mpris2__get_identity (Mpris2 *object);
gchar *mpris2__dup_identity (Mpris2 *object);
void mpris2__set_identity (Mpris2 *object, const gchar *value);

const gchar *mpris2__get_desktop_entry (Mpris2 *object);
gchar *mpris2__dup_desktop_entry (Mpris2 *object);
void mpris2__set_desktop_entry (Mpris2 *object, const gchar *value);

const gchar *const *mpris2__get_supported_uri_schemes (Mpris2 *object);
gchar **mpris2__dup_supported_uri_schemes (Mpris2 *object);
void mpris2__set_supported_uri_schemes (Mpris2 *object, const gchar *const *value);

const gchar *const *mpris2__get_supported_mime_types (Mpris2 *object);
gchar **mpris2__dup_supported_mime_types (Mpris2 *object);
void mpris2__set_supported_mime_types (Mpris2 *object, const gchar *const *value);


/* ---- */

#define MPRIS2_TYPE__PROXY (mpris2__proxy_get_type ())
#define MPRIS2__PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), MPRIS2_TYPE__PROXY, Mpris2Proxy))
#define MPRIS2__PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), MPRIS2_TYPE__PROXY, Mpris2ProxyClass))
#define MPRIS2__PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), MPRIS2_TYPE__PROXY, Mpris2ProxyClass))
#define MPRIS2_IS__PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), MPRIS2_TYPE__PROXY))
#define MPRIS2_IS__PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), MPRIS2_TYPE__PROXY))

typedef struct _Mpris2Proxy Mpris2Proxy;
typedef struct _Mpris2ProxyClass Mpris2ProxyClass;
typedef struct _Mpris2ProxyPrivate Mpris2ProxyPrivate;

struct _Mpris2Proxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  Mpris2ProxyPrivate *priv;
};

struct _Mpris2ProxyClass
{
  GDBusProxyClass parent_class;
};

GType mpris2__proxy_get_type (void) G_GNUC_CONST;

void mpris2__proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Mpris2 *mpris2__proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
Mpris2 *mpris2__proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void mpris2__proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
Mpris2 *mpris2__proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
Mpris2 *mpris2__proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define MPRIS2_TYPE__SKELETON (mpris2__skeleton_get_type ())
#define MPRIS2__SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), MPRIS2_TYPE__SKELETON, Mpris2Skeleton))
#define MPRIS2__SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), MPRIS2_TYPE__SKELETON, Mpris2SkeletonClass))
#define MPRIS2__SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), MPRIS2_TYPE__SKELETON, Mpris2SkeletonClass))
#define MPRIS2_IS__SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), MPRIS2_TYPE__SKELETON))
#define MPRIS2_IS__SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), MPRIS2_TYPE__SKELETON))

typedef struct _Mpris2Skeleton Mpris2Skeleton;
typedef struct _Mpris2SkeletonClass Mpris2SkeletonClass;
typedef struct _Mpris2SkeletonPrivate Mpris2SkeletonPrivate;

struct _Mpris2Skeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  Mpris2SkeletonPrivate *priv;
};

struct _Mpris2SkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType mpris2__skeleton_get_type (void) G_GNUC_CONST;

Mpris2 *mpris2__skeleton_new (void);


G_END_DECLS

#endif /* __MPRIS2_GENERATED_H__ */
